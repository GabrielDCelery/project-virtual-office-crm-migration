{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/usr/src/pvocrm_frontend/components/Nav/Bar.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { CssBaseline, Collapse, List } from '@material-ui/core';\nimport { Build as BuildIcon, Email as EmailIcon, EmojiEvents as EmojiEventsIcon, GetApp as GetAppIcon, InsertEmoticon as InsertEmoticonIcon, Work as WorkIcon } from '@material-ui/icons';\nimport NavDrawer from './Drawer';\nimport NavDrawerContainer from './DrawerContainer';\nimport NavListItem from './ListItem';\nimport NavListItemIcon from './ListItemIcon';\nimport NavListItemText from './ListItemText';\nimport config from '../../config';\nconst NavBarIcons = {\n  BuildIcon,\n  EmailIcon,\n  EmojiEventsIcon,\n  GetAppIcon,\n  InsertEmoticonIcon,\n  WorkIcon\n};\n\nconst SingleNavBarItem = ({\n  bIsActive,\n  icon,\n  label,\n  path\n}) => {\n  const Icon = Icons[icon];\n  return __jsx(NavListItem, {\n    button: true,\n    className: `${bIsActive ? 'active' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(NavListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), __jsx(NavListItemText, {\n    primary: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }));\n};\n\nconst DropDownNavBarItem = ({\n  bIsActive,\n  icon,\n  label,\n  navBarItemChildren\n}) => {\n  const [bIsOpen, setOpen] = useState(false);\n  const Icon = Icons[icon];\n  return __jsx(\"div\", {\n    onClick: () => setOpen(!bIsOpen),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(NavListItem, {\n    button: true,\n    className: `${bIsActive ? 'active' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(NavListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), __jsx(NavListItemText, {\n    primary: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), __jsx(NavListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, bIsActive || bIsOpen ? __jsx(ExpandLessIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }) : __jsx(ExpandMoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))), __jsx(Collapse, {\n    in: bIsActive || bIsOpen,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(List, {\n    component: \"div\",\n    disablePadding: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, navBarItemChildren.map(({\n    label,\n    bIsActive,\n    path\n  }, index) => __jsx(React.Fragment, {\n    key: `navbar-item-collapsible-${index}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(NavListItem, {\n    button: true,\n    className: `${bIsActive ? 'active' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(NavListItemText, {\n    primary: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })))))));\n};\n\nexport default function NavBar({}) {\n  const router = useRouter();\n  console.log(router);\n  const navBarItems = config.navbar.map(({\n    path,\n    component,\n    icon,\n    label,\n    rbacRule,\n    children\n  }) => {\n    const navbarItem = {\n      bIsActive: path === router.pathname,\n      component,\n      icon,\n      label,\n      path,\n      rbacRule\n    };\n\n    if (children) {\n      navbarItem['navBarItemChildren'] = children.map(({\n        path,\n        label,\n        component,\n        rbacRule\n      }) => {\n        const navBarChildItem = {\n          path,\n          label,\n          component,\n          rbacRule\n        };\n\n        if (path === router.pathname) {\n          navbarItem['bIsActive'] = true;\n          navBarChildItem['bIsActive'] = true;\n        }\n\n        return navBarChildItem;\n      });\n    }\n\n    return navbarItem;\n  });\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, __jsx(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), __jsx(NavDrawerContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(NavDrawer, {\n    variant: \"permanent\",\n    anchor: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, (navBarItems || []).map((navBarItem, index) => {\n    const {\n      label,\n      icon,\n      bIsActive,\n      path,\n      navBarItemChildren\n    } = navBarItem;\n    return __jsx(React.Fragment, {\n      key: `navbar-item-${index}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, navBarItemChildren ? __jsx(DropDownNavBarItem, _extends({\n      bIsActive,\n      icon,\n      label,\n      navBarItemChildren\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })) : __jsx(SingleNavBarItem, _extends({\n      bIsActive,\n      icon,\n      label,\n      path\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })));\n  })))));\n}","map":{"version":3,"sources":["/usr/src/pvocrm_frontend/components/Nav/Bar.jsx"],"names":["React","useRouter","CssBaseline","Collapse","List","Build","BuildIcon","Email","EmailIcon","EmojiEvents","EmojiEventsIcon","GetApp","GetAppIcon","InsertEmoticon","InsertEmoticonIcon","Work","WorkIcon","NavDrawer","NavDrawerContainer","NavListItem","NavListItemIcon","NavListItemText","config","NavBarIcons","SingleNavBarItem","bIsActive","icon","label","path","Icon","Icons","DropDownNavBarItem","navBarItemChildren","bIsOpen","setOpen","useState","map","index","NavBar","router","console","log","navBarItems","navbar","component","rbacRule","children","navbarItem","pathname","navBarChildItem","navBarItem"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useRouter } from 'next/router';\nimport { CssBaseline, Collapse, List } from '@material-ui/core';\nimport {\n  Build as BuildIcon,\n  Email as EmailIcon,\n  EmojiEvents as EmojiEventsIcon,\n  GetApp as GetAppIcon,\n  InsertEmoticon as InsertEmoticonIcon,\n  Work as WorkIcon\n} from '@material-ui/icons';\nimport NavDrawer from './Drawer';\nimport NavDrawerContainer from './DrawerContainer';\nimport NavListItem from './ListItem';\nimport NavListItemIcon from './ListItemIcon';\nimport NavListItemText from './ListItemText';\nimport config from '../../config';\n\nconst NavBarIcons = {\n  BuildIcon,\n  EmailIcon,\n  EmojiEventsIcon,\n  GetAppIcon,\n  InsertEmoticonIcon,\n  WorkIcon\n};\n\nconst SingleNavBarItem = ({ bIsActive, icon, label, path }) => {\n  const Icon = Icons[icon];\n\n  return (\n    <NavListItem button className={`${bIsActive ? 'active' : ''}`}>\n      <NavListItemIcon>\n        <Icon />\n      </NavListItemIcon>\n      <NavListItemText primary={label} />\n    </NavListItem>\n  );\n};\n\nconst DropDownNavBarItem = ({ bIsActive, icon, label, navBarItemChildren }) => {\n  const [bIsOpen, setOpen] = useState(false);\n  const Icon = Icons[icon];\n\n  return (\n    <div onClick={() => setOpen(!bIsOpen)}>\n      <NavListItem button className={`${bIsActive ? 'active' : ''}`}>\n        <NavListItemIcon>\n          <Icon />\n        </NavListItemIcon>\n        <NavListItemText primary={label} />\n        <NavListItemIcon>\n          {bIsActive || bIsOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n        </NavListItemIcon>\n      </NavListItem>\n\n      <Collapse in={bIsActive || bIsOpen} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          {navBarItemChildren.map(({ label, bIsActive, path }, index) => (\n            <React.Fragment key={`navbar-item-collapsible-${index}`}>\n              <NavListItem button className={`${bIsActive ? 'active' : ''}`}>\n                <NavListItemText primary={label} />\n              </NavListItem>\n            </React.Fragment>\n          ))}\n        </List>\n      </Collapse>\n    </div>\n  );\n};\n\nexport default function NavBar({}) {\n  const router = useRouter();\n\n  console.log(router);\n  const navBarItems = config.navbar.map(\n    ({ path, component, icon, label, rbacRule, children }) => {\n      const navbarItem = {\n        bIsActive: path === router.pathname,\n        component,\n        icon,\n        label,\n        path,\n        rbacRule\n      };\n\n      if (children) {\n        navbarItem['navBarItemChildren'] = children.map(\n          ({ path, label, component, rbacRule }) => {\n            const navBarChildItem = {\n              path,\n              label,\n              component,\n              rbacRule\n            };\n\n            if (path === router.pathname) {\n              navbarItem['bIsActive'] = true;\n              navBarChildItem['bIsActive'] = true;\n            }\n\n            return navBarChildItem;\n          }\n        );\n      }\n\n      return navbarItem;\n    }\n  );\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <NavDrawerContainer>\n        <NavDrawer variant=\"permanent\" anchor=\"left\">\n          <List>\n            {(navBarItems || []).map((navBarItem, index) => {\n              const {\n                label,\n                icon,\n                bIsActive,\n                path,\n                navBarItemChildren\n              } = navBarItem;\n\n              return (\n                <React.Fragment key={`navbar-item-${index}`}>\n                  {navBarItemChildren ? (\n                    <DropDownNavBarItem\n                      {...{\n                        bIsActive,\n                        icon,\n                        label,\n                        navBarItemChildren\n                      }}\n                    />\n                  ) : (\n                    <SingleNavBarItem\n                      {...{\n                        bIsActive,\n                        icon,\n                        label,\n                        path\n                      }}\n                    />\n                  )}\n                </React.Fragment>\n              );\n            })}\n          </List>\n        </NavDrawer>\n      </NavDrawerContainer>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}