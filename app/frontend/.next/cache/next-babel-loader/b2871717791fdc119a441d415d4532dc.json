{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectDestructuringEmpty from \"@babel/runtime-corejs2/helpers/esm/objectDestructuringEmpty\";\nvar _jsxFileName = \"/usr/src/pvocrm_frontend/components/Nav/Bar.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { CssBaseline, Collapse, List } from '@material-ui/core';\nimport NavDrawer from './Drawer';\nimport NavDrawerContainer from './DrawerContainer';\nimport NavListItem from './ListItem';\nimport NavListItemIcon from './ListItemIcon';\nimport NavListItemText from './ListItemText';\nimport config from '../../config';\nimport { ContactMail as ContactMailIcon, Dashboard as DashboardIcon, ExpandLess as ExpandLessIcon, ExpandMore as ExpandMoreIcon, Layers as LayersIcon, ListAlt as ListAltIcon, Person as PersonIcon, Search as SearchIcon } from '@material-ui/icons';\nvar Icons = {\n  ContactMailIcon: ContactMailIcon,\n  DashboardIcon: DashboardIcon,\n  LayersIcon: LayersIcon,\n  ListAltIcon: ListAltIcon,\n  PersonIcon: PersonIcon,\n  SearchIcon: SearchIcon\n};\n\nvar SingleNavBarItem = function SingleNavBarItem(_ref) {\n  var bIsActive = _ref.bIsActive,\n      icon = _ref.icon,\n      label = _ref.label,\n      path = _ref.path;\n  var Icon = Icons[icon];\n  return __jsx(NavListItem, {\n    button: true,\n    className: \"\".concat(bIsActive ? 'active' : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(NavListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), __jsx(NavListItemText, {\n    primary: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n};\n\nvar DropDownNavBarItem = function DropDownNavBarItem(_ref2) {\n  var bIsActive = _ref2.bIsActive,\n      icon = _ref2.icon,\n      label = _ref2.label,\n      navBarItemChildren = _ref2.navBarItemChildren;\n\n  var _useState = useState(false),\n      bIsOpen = _useState[0],\n      setOpen = _useState[1];\n\n  var Icon = Icons[icon];\n  return __jsx(\"div\", {\n    onClick: function onClick() {\n      return setOpen(!bIsOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(NavListItem, {\n    button: true,\n    className: \"\".concat(bIsActive ? 'active' : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(NavListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), __jsx(NavListItemText, {\n    primary: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(NavListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, bIsActive || bIsOpen ? __jsx(ExpandLessIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }) : __jsx(ExpandMoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))), __jsx(Collapse, {\n    \"in\": bIsActive || bIsOpen,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(List, {\n    component: \"div\",\n    disablePadding: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, navBarItemChildren.map(function (_ref3, index) {\n    var label = _ref3.label,\n        bIsActive = _ref3.bIsActive,\n        path = _ref3.path;\n    return __jsx(React.Fragment, {\n      key: \"navbar-item-collapsible-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(NavListItem, {\n      button: true,\n      className: \"\".concat(bIsActive ? 'active' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(NavListItemText, {\n      primary: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }))));\n};\n\nexport default function NavBar(_ref4) {\n  _objectDestructuringEmpty(_ref4);\n\n  var router = useRouter();\n  console.log('a');\n  var navBarItems = config.navbar.map(function (_ref5) {\n    var path = _ref5.path,\n        component = _ref5.component,\n        icon = _ref5.icon,\n        label = _ref5.label,\n        rbacRule = _ref5.rbacRule,\n        children = _ref5.children;\n    var navbarItem = {\n      bIsActive: path === router.pathname,\n      component: component,\n      icon: icon,\n      label: label,\n      path: path,\n      rbacRule: rbacRule\n    };\n\n    if (children) {\n      navbarItem['navBarItemChildren'] = children.map(function (_ref6) {\n        var path = _ref6.path,\n            label = _ref6.label,\n            component = _ref6.component,\n            rbacRule = _ref6.rbacRule;\n        var navBarChildItem = {\n          path: path,\n          label: label,\n          component: component,\n          rbacRule: rbacRule\n        };\n\n        if (path === router.pathname) {\n          navbarItem['bIsActive'] = true;\n          navBarChildItem['bIsActive'] = true;\n        }\n\n        return navBarChildItem;\n      });\n    }\n\n    return navbarItem;\n  });\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), \"a\", __jsx(NavDrawerContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(NavDrawer, {\n    variant: \"permanent\",\n    anchor: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, (navBarItems || []).map(function (navBarItem, index) {\n    var label = navBarItem.label,\n        icon = navBarItem.icon,\n        bIsActive = navBarItem.bIsActive,\n        path = navBarItem.path,\n        navBarItemChildren = navBarItem.navBarItemChildren;\n    return __jsx(React.Fragment, {\n      key: \"navbar-item-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, navBarItemChildren ? __jsx(DropDownNavBarItem, _extends({\n      bIsActive: bIsActive,\n      icon: icon,\n      label: label,\n      navBarItemChildren: navBarItemChildren\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })) : __jsx(SingleNavBarItem, _extends({\n      bIsActive: bIsActive,\n      icon: icon,\n      label: label,\n      path: path\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })));\n  })))));\n}","map":{"version":3,"sources":["/usr/src/pvocrm_frontend/components/Nav/Bar.jsx"],"names":["React","useState","useRouter","CssBaseline","Collapse","List","NavDrawer","NavDrawerContainer","NavListItem","NavListItemIcon","NavListItemText","config","ContactMail","ContactMailIcon","Dashboard","DashboardIcon","ExpandLess","ExpandLessIcon","ExpandMore","ExpandMoreIcon","Layers","LayersIcon","ListAlt","ListAltIcon","Person","PersonIcon","Search","SearchIcon","Icons","SingleNavBarItem","bIsActive","icon","label","path","Icon","DropDownNavBarItem","navBarItemChildren","bIsOpen","setOpen","map","index","NavBar","router","console","log","navBarItems","navbar","component","rbacRule","children","navbarItem","pathname","navBarChildItem","navBarItem"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { CssBaseline, Collapse, List } from '@material-ui/core';\nimport NavDrawer from './Drawer';\nimport NavDrawerContainer from './DrawerContainer';\nimport NavListItem from './ListItem';\nimport NavListItemIcon from './ListItemIcon';\nimport NavListItemText from './ListItemText';\nimport config from '../../config';\nimport {\n  ContactMail as ContactMailIcon,\n  Dashboard as DashboardIcon,\n  ExpandLess as ExpandLessIcon,\n  ExpandMore as ExpandMoreIcon,\n  Layers as LayersIcon,\n  ListAlt as ListAltIcon,\n  Person as PersonIcon,\n  Search as SearchIcon\n} from '@material-ui/icons';\n\nconst Icons = {\n  ContactMailIcon,\n  DashboardIcon,\n  LayersIcon,\n  ListAltIcon,\n  PersonIcon,\n  SearchIcon\n};\n\nconst SingleNavBarItem = ({ bIsActive, icon, label, path }) => {\n  const Icon = Icons[icon];\n\n  return (\n    <NavListItem button className={`${bIsActive ? 'active' : ''}`}>\n      <NavListItemIcon>\n        <Icon />\n      </NavListItemIcon>\n      <NavListItemText primary={label} />\n    </NavListItem>\n  );\n};\n\nconst DropDownNavBarItem = ({ bIsActive, icon, label, navBarItemChildren }) => {\n  const [bIsOpen, setOpen] = useState(false);\n  const Icon = Icons[icon];\n\n  return (\n    <div onClick={() => setOpen(!bIsOpen)}>\n      <NavListItem button className={`${bIsActive ? 'active' : ''}`}>\n        <NavListItemIcon>\n          <Icon />\n        </NavListItemIcon>\n        <NavListItemText primary={label} />\n        <NavListItemIcon>\n          {bIsActive || bIsOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n        </NavListItemIcon>\n      </NavListItem>\n\n      <Collapse in={bIsActive || bIsOpen} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          {navBarItemChildren.map(({ label, bIsActive, path }, index) => (\n            <React.Fragment key={`navbar-item-collapsible-${index}`}>\n              <NavListItem button className={`${bIsActive ? 'active' : ''}`}>\n                <NavListItemText primary={label} />\n              </NavListItem>\n            </React.Fragment>\n          ))}\n        </List>\n      </Collapse>\n    </div>\n  );\n};\n\nexport default function NavBar({}) {\n  const router = useRouter();\n\n  console.log('a');\n  const navBarItems = config.navbar.map(\n    ({ path, component, icon, label, rbacRule, children }) => {\n      const navbarItem = {\n        bIsActive: path === router.pathname,\n        component,\n        icon,\n        label,\n        path,\n        rbacRule\n      };\n\n      if (children) {\n        navbarItem['navBarItemChildren'] = children.map(\n          ({ path, label, component, rbacRule }) => {\n            const navBarChildItem = {\n              path,\n              label,\n              component,\n              rbacRule\n            };\n\n            if (path === router.pathname) {\n              navbarItem['bIsActive'] = true;\n              navBarChildItem['bIsActive'] = true;\n            }\n\n            return navBarChildItem;\n          }\n        );\n      }\n\n      return navbarItem;\n    }\n  );\n\n  return (\n    <React.Fragment>\n      <CssBaseline />a\n      <NavDrawerContainer>\n        <NavDrawer variant=\"permanent\" anchor=\"left\">\n          <List>\n            {(navBarItems || []).map((navBarItem, index) => {\n              const {\n                label,\n                icon,\n                bIsActive,\n                path,\n                navBarItemChildren\n              } = navBarItem;\n\n              return (\n                <React.Fragment key={`navbar-item-${index}`}>\n                  {navBarItemChildren ? (\n                    <DropDownNavBarItem\n                      {...{\n                        bIsActive,\n                        icon,\n                        label,\n                        navBarItemChildren\n                      }}\n                    />\n                  ) : (\n                    <SingleNavBarItem\n                      {...{\n                        bIsActive,\n                        icon,\n                        label,\n                        path\n                      }}\n                    />\n                  )}\n                </React.Fragment>\n              );\n            })}\n          </List>\n        </NavDrawer>\n      </NavDrawerContainer>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}