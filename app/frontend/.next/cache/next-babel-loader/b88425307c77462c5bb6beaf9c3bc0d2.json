{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectDestructuringEmpty from \"@babel/runtime-corejs2/helpers/esm/objectDestructuringEmpty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/usr/src/pvocrm_frontend/components/Nav/Bar.jsx\";\nvar __jsx = React.createElement;\nimport React, { useRouter } from 'react';\nimport { CssBaseline, Collapse, List } from '@material-ui/core';\nimport { Build as BuildIcon, Email as EmailIcon, EmojiEvents as EmojiEventsIcon, GetApp as GetAppIcon, InsertEmoticon as InsertEmoticonIcon, Work as WorkIcon } from '@material-ui/icons';\nimport NavDrawer from './Drawer';\nimport NavDrawerContainer from './DrawerContainer';\nimport NavListItem from './ListItem';\nimport NavListItemIcon from './ListItemIcon';\nimport NavListItemText from './ListItemText';\nimport config from '../../config';\nvar NavBarIcons = {\n  BuildIcon: BuildIcon,\n  EmailIcon: EmailIcon,\n  EmojiEventsIcon: EmojiEventsIcon,\n  GetAppIcon: GetAppIcon,\n  InsertEmoticonIcon: InsertEmoticonIcon,\n  WorkIcon: WorkIcon\n};\n\nvar SingleNavBarItem = function SingleNavBarItem(_ref) {\n  var bIsActive = _ref.bIsActive,\n      icon = _ref.icon,\n      label = _ref.label,\n      path = _ref.path;\n  var Icon = Icons[icon];\n  return __jsx(NavListItem, {\n    button: true,\n    className: \"\".concat(bIsActive ? 'active' : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(NavListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), __jsx(NavListItemText, {\n    primary: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nvar DropDownNavBarItem = function DropDownNavBarItem(_ref2) {\n  var bIsActive = _ref2.bIsActive,\n      icon = _ref2.icon,\n      label = _ref2.label,\n      navBarItemChildren = _ref2.navBarItemChildren;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      bIsOpen = _useState2[0],\n      setOpen = _useState2[1];\n\n  var Icon = Icons[icon];\n  return __jsx(\"div\", {\n    onClick: function onClick() {\n      return setOpen(!bIsOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(NavListItem, {\n    button: true,\n    className: \"\".concat(bIsActive ? 'active' : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(NavListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), __jsx(NavListItemText, {\n    primary: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), __jsx(NavListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, bIsActive || bIsOpen ? __jsx(ExpandLessIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }) : __jsx(ExpandMoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))), __jsx(Collapse, {\n    \"in\": bIsActive || bIsOpen,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(List, {\n    component: \"div\",\n    disablePadding: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, navBarItemChildren.map(function (_ref3, index) {\n    var label = _ref3.label,\n        bIsActive = _ref3.bIsActive,\n        path = _ref3.path;\n    return __jsx(React.Fragment, {\n      key: \"navbar-item-collapsible-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(NavListItem, {\n      button: true,\n      className: \"\".concat(bIsActive ? 'active' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(NavListItemText, {\n      primary: label,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }))));\n};\n\nexport default function NavBar(_ref4) {\n  _objectDestructuringEmpty(_ref4);\n\n  var router = useRouter();\n  console.log(router);\n  var navBarItems = config.navbar.map(function (_ref5) {\n    var path = _ref5.path,\n        component = _ref5.component,\n        icon = _ref5.icon,\n        label = _ref5.label,\n        rbacRule = _ref5.rbacRule,\n        children = _ref5.children;\n    var navbarItem = {\n      bIsActive: path === router.pathname,\n      component: component,\n      icon: icon,\n      label: label,\n      path: path,\n      rbacRule: rbacRule\n    };\n\n    if (children) {\n      navbarItem['navBarItemChildren'] = children.map(function (_ref6) {\n        var path = _ref6.path,\n            label = _ref6.label,\n            component = _ref6.component,\n            rbacRule = _ref6.rbacRule;\n        var navBarChildItem = {\n          path: path,\n          label: label,\n          component: component,\n          rbacRule: rbacRule\n        };\n\n        if (path === router.pathname) {\n          navbarItem['bIsActive'] = true;\n          navBarChildItem['bIsActive'] = true;\n        }\n\n        return navBarChildItem;\n      });\n    }\n\n    return navbarItem;\n  });\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), __jsx(NavDrawerContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(NavDrawer, {\n    variant: \"permanent\",\n    anchor: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, (navBarItems || []).map(function (navBarItem, index) {\n    var label = navBarItem.label,\n        icon = navBarItem.icon,\n        bIsActive = navBarItem.bIsActive,\n        path = navBarItem.path,\n        navBarItemChildren = navBarItem.navBarItemChildren;\n    return __jsx(React.Fragment, {\n      key: \"navbar-item-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, navBarItemChildren ? __jsx(DropDownNavBarItem, _extends({\n      bIsActive: bIsActive,\n      icon: icon,\n      label: label,\n      navBarItemChildren: navBarItemChildren\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })) : __jsx(SingleNavBarItem, _extends({\n      bIsActive: bIsActive,\n      icon: icon,\n      label: label,\n      path: path\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })));\n  })))));\n}","map":{"version":3,"sources":["/usr/src/pvocrm_frontend/components/Nav/Bar.jsx"],"names":["React","useRouter","CssBaseline","Collapse","List","Build","BuildIcon","Email","EmailIcon","EmojiEvents","EmojiEventsIcon","GetApp","GetAppIcon","InsertEmoticon","InsertEmoticonIcon","Work","WorkIcon","NavDrawer","NavDrawerContainer","NavListItem","NavListItemIcon","NavListItemText","config","NavBarIcons","SingleNavBarItem","bIsActive","icon","label","path","Icon","Icons","DropDownNavBarItem","navBarItemChildren","useState","bIsOpen","setOpen","map","index","NavBar","router","console","log","navBarItems","navbar","component","rbacRule","children","navbarItem","pathname","navBarChildItem","navBarItem"],"mappings":"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","sourcesContent":["import React, { useRouter } from 'react';\nimport { CssBaseline, Collapse, List } from '@material-ui/core';\nimport {\n  Build as BuildIcon,\n  Email as EmailIcon,\n  EmojiEvents as EmojiEventsIcon,\n  GetApp as GetAppIcon,\n  InsertEmoticon as InsertEmoticonIcon,\n  Work as WorkIcon\n} from '@material-ui/icons';\nimport NavDrawer from './Drawer';\nimport NavDrawerContainer from './DrawerContainer';\nimport NavListItem from './ListItem';\nimport NavListItemIcon from './ListItemIcon';\nimport NavListItemText from './ListItemText';\nimport config from '../../config';\n\nconst NavBarIcons = {\n  BuildIcon,\n  EmailIcon,\n  EmojiEventsIcon,\n  GetAppIcon,\n  InsertEmoticonIcon,\n  WorkIcon\n};\n\nconst SingleNavBarItem = ({ bIsActive, icon, label, path }) => {\n  const Icon = Icons[icon];\n\n  return (\n    <NavListItem button className={`${bIsActive ? 'active' : ''}`}>\n      <NavListItemIcon>\n        <Icon />\n      </NavListItemIcon>\n      <NavListItemText primary={label} />\n    </NavListItem>\n  );\n};\n\nconst DropDownNavBarItem = ({ bIsActive, icon, label, navBarItemChildren }) => {\n  const [bIsOpen, setOpen] = useState(false);\n  const Icon = Icons[icon];\n\n  return (\n    <div onClick={() => setOpen(!bIsOpen)}>\n      <NavListItem button className={`${bIsActive ? 'active' : ''}`}>\n        <NavListItemIcon>\n          <Icon />\n        </NavListItemIcon>\n        <NavListItemText primary={label} />\n        <NavListItemIcon>\n          {bIsActive || bIsOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n        </NavListItemIcon>\n      </NavListItem>\n\n      <Collapse in={bIsActive || bIsOpen} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          {navBarItemChildren.map(({ label, bIsActive, path }, index) => (\n            <React.Fragment key={`navbar-item-collapsible-${index}`}>\n              <NavListItem button className={`${bIsActive ? 'active' : ''}`}>\n                <NavListItemText primary={label} />\n              </NavListItem>\n            </React.Fragment>\n          ))}\n        </List>\n      </Collapse>\n    </div>\n  );\n};\n\nexport default function NavBar({}) {\n  const router = useRouter();\n\n  console.log(router);\n  const navBarItems = config.navbar.map(\n    ({ path, component, icon, label, rbacRule, children }) => {\n      const navbarItem = {\n        bIsActive: path === router.pathname,\n        component,\n        icon,\n        label,\n        path,\n        rbacRule\n      };\n\n      if (children) {\n        navbarItem['navBarItemChildren'] = children.map(\n          ({ path, label, component, rbacRule }) => {\n            const navBarChildItem = {\n              path,\n              label,\n              component,\n              rbacRule\n            };\n\n            if (path === router.pathname) {\n              navbarItem['bIsActive'] = true;\n              navBarChildItem['bIsActive'] = true;\n            }\n\n            return navBarChildItem;\n          }\n        );\n      }\n\n      return navbarItem;\n    }\n  );\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <NavDrawerContainer>\n        <NavDrawer variant=\"permanent\" anchor=\"left\">\n          <List>\n            {(navBarItems || []).map((navBarItem, index) => {\n              const {\n                label,\n                icon,\n                bIsActive,\n                path,\n                navBarItemChildren\n              } = navBarItem;\n\n              return (\n                <React.Fragment key={`navbar-item-${index}`}>\n                  {navBarItemChildren ? (\n                    <DropDownNavBarItem\n                      {...{\n                        bIsActive,\n                        icon,\n                        label,\n                        navBarItemChildren\n                      }}\n                    />\n                  ) : (\n                    <SingleNavBarItem\n                      {...{\n                        bIsActive,\n                        icon,\n                        label,\n                        path\n                      }}\n                    />\n                  )}\n                </React.Fragment>\n              );\n            })}\n          </List>\n        </NavDrawer>\n      </NavDrawerContainer>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}