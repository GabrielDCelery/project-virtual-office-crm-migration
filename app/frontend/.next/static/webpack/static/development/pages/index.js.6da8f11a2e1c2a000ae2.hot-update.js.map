{"version":3,"file":"static/webpack/static/development/pages/index.js.6da8f11a2e1c2a000ae2.hot-update.js","sources":["webpack:///./components/Nav/Bar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { CssBaseline, Collapse, List } from '@material-ui/core';\nimport NavDrawer from './Drawer';\nimport NavDrawerContainer from './DrawerContainer';\nimport NavListItem from './ListItem';\nimport NavListItemIcon from './ListItemIcon';\nimport NavListItemText from './ListItemText';\nimport config from '../../config';\nimport {\n  ContactMail as ContactMailIcon,\n  Dashboard as DashboardIcon,\n  ExpandLess as ExpandLessIcon,\n  ExpandMore as ExpandMoreIcon,\n  Layers as LayersIcon,\n  ListAlt as ListAltIcon,\n  Person as PersonIcon,\n  Search as SearchIcon\n} from '@material-ui/icons';\n\nconst Icons = {\n  ContactMailIcon,\n  DashboardIcon,\n  LayersIcon,\n  ListAltIcon,\n  PersonIcon,\n  SearchIcon\n};\n\nconst SingleNavBarItem = ({ bIsActive, icon, label, path }) => {\n  const Icon = Icons[icon];\n\n  return (\n    <NavListItem button className={`${bIsActive ? 'active' : ''}`}>\n      <NavListItemIcon>\n        <Icon />\n      </NavListItemIcon>\n      <NavListItemText primary={label} />\n    </NavListItem>\n  );\n};\n\nconst DropDownNavBarItem = ({ bIsActive, icon, label, navBarItemChildren }) => {\n  const [bIsOpen, setOpen] = useState(false);\n  const Icon = Icons[icon];\n\n  return (\n    <div onClick={() => setOpen(!bIsOpen)}>\n      <NavListItem button className={`${bIsActive ? 'active' : ''}`}>\n        <NavListItemIcon>\n          <Icon />\n        </NavListItemIcon>\n        <NavListItemText primary={label} />\n        <NavListItemIcon>\n          {bIsActive || bIsOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n        </NavListItemIcon>\n      </NavListItem>\n\n      <Collapse in={bIsActive || bIsOpen} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          {navBarItemChildren.map(({ label, bIsActive, path }, index) => (\n            <React.Fragment key={`navbar-item-collapsible-${index}`}>\n              <NavListItem button className={`${bIsActive ? 'active' : ''}`}>\n                <NavListItemText primary={label} />\n              </NavListItem>\n            </React.Fragment>\n          ))}\n        </List>\n      </Collapse>\n    </div>\n  );\n};\n\nexport default function NavBar({}) {\n  const router = useRouter();\n\n  console.log('a');\n  const navBarItems = config.navbar.map(\n    ({ path, component, icon, label, rbacRule, children }) => {\n      const navbarItem = {\n        bIsActive: path === router.pathname,\n        component,\n        icon,\n        label,\n        path,\n        rbacRule\n      };\n\n      if (children) {\n        navbarItem['navBarItemChildren'] = children.map(\n          ({ path, label, component, rbacRule }) => {\n            const navBarChildItem = {\n              path,\n              label,\n              component,\n              rbacRule\n            };\n\n            if (path === router.pathname) {\n              navbarItem['bIsActive'] = true;\n              navBarChildItem['bIsActive'] = true;\n            }\n\n            return navBarChildItem;\n          }\n        );\n      }\n\n      return navbarItem;\n    }\n  );\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <NavDrawerContainer>\n        <NavDrawer variant=\"permanent\" anchor=\"left\">\n          <List>\n            {(navBarItems || []).map((navBarItem, index) => {\n              const {\n                label,\n                icon,\n                bIsActive,\n                path,\n                navBarItemChildren\n              } = navBarItem;\n\n              return (\n                <React.Fragment key={`navbar-item-${index}`}>\n                  {navBarItemChildren ? (\n                    <DropDownNavBarItem\n                      {...{\n                        bIsActive,\n                        icon,\n                        label,\n                        navBarItemChildren\n                      }}\n                    />\n                  ) : (\n                    <SingleNavBarItem\n                      {...{\n                        bIsActive,\n                        icon,\n                        label,\n                        path\n                      }}\n                    />\n                  )}\n                </React.Fragment>\n              );\n            })}\n          </List>\n        </NavDrawer>\n      </NavDrawerContainer>\n    </React.Fragment>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAWA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAMA;;;;A","sourceRoot":""}